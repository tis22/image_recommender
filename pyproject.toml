# see documentation, e.g.
# - https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#declaring-project-metadata
# - https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
# - https://www.python.org/dev/peps/pep-0621/

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]  # list of folders that contain the packages (["."] by default)
include = ["resources"]  # package names should match these glob patterns (["*"] by default)
exclude = []  # exclude packages matching these glob patterns (empty by default)
namespaces = false  # to disable scanning PEP 420 namespaces (true by default)

[project]
authors = [
    { name = "Joschua Schramm", email = "joschua.schramm@study.hs-duesseldorf.de" },
    { name = "Tim Sandrock", email = "tim.sandrock@study.hs-duesseldorf.de" }
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "ruff == 0.1.7",
    "pytest==7.4.3",
    "numpy==1.24.3",
    "pandas==2.0.3",
    "tqdm==4.66.1",
    "matplotlib==3.7.1",
    "Pillow==9.4.0",
    "opencv-python==4.7.0.72",
    "scipy==1.11.2",
    "sqlite==3.41.2",
    "torch==2.0.1",
    "torchvision==0.15.2",
    "scikit-learn==1.3.0",
    "umap-learn==0.5.4",
    "plotly==5.15.0"
]

description = "A package implementing an image recommender"
license = {file = "LICENSE"}
name = "image_recommender"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.8"
version = "0.1.0"

[project.optional-dependencies]
dev = [
    "black",
    "flake8",
    "isort",
    "pytest",
    "pytest-cov",
    "ruff",
]
publishing = [
    "build",
    "twine",
    "wheel",
]

[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
)/
'''

[tool.isort]
profile = "black"
known_first_party = "image_recommender"
packages = ["python_image_recommender"]
src_paths = ["image_recommender", "tests"]
line_length = "100"

[tool.pylint]  # If you opt to use pylint
# Pylint configuration options
